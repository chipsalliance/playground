diff --git a/sim/midas/src/main/scala/midas/FPGAQoRShimGenerator.scala b/sim/midas/src/main/scala/midas/FPGAQoRShimGenerator.scala
index 6f090d780b..9ce63292a2 100644
--- a/sim/midas/src/main/scala/midas/FPGAQoRShimGenerator.scala
+++ b/sim/midas/src/main/scala/midas/FPGAQoRShimGenerator.scala
@@ -2,7 +2,7 @@
 package midas.unittest
 
 import chisel3._
-import chisel3.experimental.DataMirror
+import chisel3.reflect.DataMirror
 
 import freechips.rocketchip.config.{Parameters, Config, Field}
 import midas.widgets.ScanRegister
@@ -17,9 +17,9 @@ class QoRShim(implicit val p: Parameters) extends Module {
 
   val modules = p(QoRTargets)(p)
   val scanOuts = modules.map({ module =>
-    val ports = DataMirror.modulePorts(module).flatMap({
-      case (_, id: Clock) => None
-      case (_, id) => Some(id)
+    val ports = DataMirror.modulePorts(module).map(_._2).flatMap({
+      case id: Clock => None
+      case id => Some(id)
     })
     ScanRegister(ports, io.scanEnable, io.scanIn)
   })
diff --git a/sim/src/main/scala/midasexamples/PointerChaser.scala b/sim/src/main/scala/midasexamples/PointerChaser.scala
index 6ae9e53af9..81eca841ce 100644
--- a/sim/src/main/scala/midasexamples/PointerChaser.scala
+++ b/sim/src/main/scala/midasexamples/PointerChaser.scala
@@ -60,7 +60,7 @@ class PointerChaserDUT(implicit val p: Parameters) extends Module with HasNastiP
 
   when (rFire && memoryIF.r.bits.last){
     resultValid := isFinalNode
-    resultReg := resultReg + memoryIF.r.bits.data.asSInt()
+    resultReg := resultReg + memoryIF.r.bits.data.asSInt
   }.elsewhen (doneFire) {
     resultValid := false.B
     resultReg := 0.S
